[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "机器学习 (Python)",
    "section": "",
    "text": "欢迎来到 机器学习 (Python) 课程网站! 👋\n面向经管学生的实战型机器学习课程\n本课程 弱化复杂的数学理论，侧重机器学习和生成式AI的实战应用，并深度结合 AI 辅助编程工具，旨在帮助你快速掌握核心技能，并培养 数据驱动的商业创新思维。\n课程面向：经管类本科生、研究生，以及对机器学习和AI商业应用感兴趣的各专业学生\n核心技能：Python编程, 机器学习算法, 生成式AI, AI辅助编程\n课程目标：掌握机器学习和生成式AI核心概念与应用，能够运用经典算法和AI工具解决实际商业问题\n点击查看 课程大纲\n开始 第一周学习",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>机器学习 (Python)</span>"
    ]
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "课程大纲",
    "section": "",
    "text": "课程概述\n本课程为经管学生设计，旨在弱化复杂的数学理论，侧重机器学习和生成式AI的实战应用，并深度结合 AI 辅助编程工具。课程共计 16 周，每周两次课，每次 1.5 小时。课程以项目为中心，贯穿始终，帮助学生掌握核心技能并培养创新思维。",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>课程大纲</span>"
    ]
  },
  {
    "objectID": "syllabus.html#课程目标",
    "href": "syllabus.html#课程目标",
    "title": "课程大纲",
    "section": "课程目标",
    "text": "课程目标\n完成本课程后，学生将能够：\n\n熟练运用 AI 辅助编程工具: 例如 GitHub Copilot, Cursor, 通义灵码等，提升代码编写效率和质量。\n理解核心概念: 解释机器学习和生成式AI的核心概念，并区分不同算法的适用场景。\n掌握编程工具: 熟练使用 VS Code, Cursor 等代码编辑器，以及 GitHub Copilot, 通义灵码, Cline 等 AI 辅助编程工具，以及 scikit-learn, TensorFlow, PyTorch, Langchain 等 Python 库进行机器学习和生成式AI编程。\n应用经典算法: 运用分类、回归、聚类等经典机器学习算法，以及 Prompt 工程、Stable Diffusion 等生成式AI技术，解决实际商业问题 (例如：客户分类、销量预测、图像生成、Agent 开发)。\n团队协作: 有效地进行团队合作，完成四个具有实际商业应用价值的小组项目，并撰写项目报告和进行项目展示。",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>课程大纲</span>"
    ]
  },
  {
    "objectID": "syllabus.html#课程结构",
    "href": "syllabus.html#课程结构",
    "title": "课程大纲",
    "section": "课程结构",
    "text": "课程结构\n课程分为四个阶段，循序渐进地引导学生从理论到实践，最终完成小组项目，并拓展到更广泛的商业应用场景和伦理考量。\n\n每个阶段都将深度结合 AI 辅助编程工具，提升学习效率和编程体验。\n阶段一 (1-2周): 机器学习与Python入门\n\n目标：建立机器学习基础概念，熟悉Python编程环境和AI辅助工具。\n\n阶段二 (3-8周): 机器学习核心算法实践\n\n目标：掌握分类、回归、聚类等核心机器学习算法，并能应用于实际问题。\n\n阶段三 (9-13周): 生成式AI探索与应用\n\n目标：了解大语言模型、多模态AI等生成式AI技术，掌握Prompt工程和Agent开发等技能。\n\n阶段四 (14-16周): 小组综合项目实战与商业应用拓展\n\n目标：团队合作，综合应用机器学习和生成式AI技术解决实际商业问题，并拓展到更广泛的商业应用场景和伦理考量。",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>课程大纲</span>"
    ]
  },
  {
    "objectID": "syllabus.html#每周课程安排",
    "href": "syllabus.html#每周课程安排",
    "title": "课程大纲",
    "section": "每周课程安排",
    "text": "每周课程安排\n以下是详细的每周课程内容和项目安排，每次课程 1.5 小时。\n\n第一阶段 (1-2周): 机器学习与Python入门\n\n第1周 (共2次课)\n\n\n第一次课: 机器学习导论与Python环境搭建\n\n内容：\n\n讲解机器学习的核心概念：监督学习、无监督学习、强化学习 (简要介绍)。\n对比机器学习与传统统计分析、数据挖掘。\n展示机器学习和生成式AI在商业领域的应用案例 (例如：精准营销、风险管理、智能客服、内容创作)。\nPython 机器学习环境搭建：VS Code, Python, Jupyter 插件 (Extension), scikit-learn, pandas, numpy 等常用库安装。\n介绍并体验 AI 辅助编程工具 (例如：GitHub Copilot, 通义灵码, Cline)。\n\n实践：\n\n熟悉 VS Code, Jupyter Notebook 插件和基本的 Python 数据操作。\n使用 AI 工具辅助编写简单的 Python 代码，体验代码自动补全和生成功能。\n\n\n第二次课: Python 基础语法与数据操作\n\n内容：\n\nPython 基础语法回顾：变量、数据类型、运算符、控制流 (循环、条件语句)、函数、模块。\nNumpy 基础：数组创建、数组运算、常用函数。\nPandas 基础：数据结构 (Series, DataFrame)、数据读取、数据选择、数据清洗 (重复值处理)。\n\n实践：\n\n完成 Python 基础语法和数据操作的编程练习。\n使用 AI 工具辅助完成 Python 代码。\n\n\n\n\n\n\n第2周 (共2次课)\n\n\n第一次课: 数据预处理与特征工程基础\n\n内容：\n\n数据加载与探索：使用 pandas 读取和查看数据，进行数据基本统计分析和可视化。\n数据清洗：缺失值处理策略 (删除、填充)、异常值检测与处理 (箱线图、Z-score)。\n特征工程基础：\n\n数值特征处理：特征缩放 (标准化、归一化)、特征转换 (多项式特征)。\n类别特征处理：独热编码、标签编码。\n\n使用 scikit-learn 进行数据预处理和特征工程的常用方法。\n\n实践：\n\n使用 pandas 和 numpy 进行实际的数据预处理操作练习。\n使用 AI 工具辅助完成数据预处理代码。\n\n小组项目一：电商用户行为数据探索与预处理 (案例介绍与数据准备)\n\n介绍电商用户行为数据集，明确项目目标：对用户行为数据进行探索性分析和预处理，为后续的机器学习建模做准备。\n布置小组项目一任务：数据探索、清洗和特征工程，下周课前提交预处理后的数据集和代码。\n\n\n第二次课: 小组项目一：电商用户行为数据探索与预处理 (数据分析与代码实践)\n\n内容：\n\n学生分组进行小组项目一：电商用户行为数据探索与预处理\n教师巡回指导，解答学生在数据分析和代码实现中遇到的问题。\n\n实践：\n\n学生以小组为单位，使用 Python 和 AI 工具，进行电商用户行为数据探索、数据清洗和特征工程。\n完成小组项目一代码初稿。\n\n\n\n\n\n\n\n第二阶段 (3-8周): 机器学习核心算法实践\n\n第3周 (共2次课)\n\n\n第一次课: 分类算法 (一) - 逻辑回归与支持向量机 (SVM)\n\n内容：\n\n分类问题概述：应用场景 (客户分类、风险预测、垃圾邮件识别等)。\n逻辑回归：原理、公式推导 (简要介绍)、scikit-learn 实现、模型评估指标 (准确率、精确率、召回率、F1-score、AUC-ROC)。\n支持向量机 (SVM)：原理 (最大间隔、核函数 - 线性核、RBF核)、scikit-learn 实现、SVM 的优缺点。\n模型选择与调优：交叉验证、网格搜索 (GridSearchCV) (简要介绍)。\n\n实践：\n\n使用 scikit-learn 构建和评估逻辑回归和 SVM 分类模型，应用于电商用户行为数据集 (小组项目一)。\n使用 AI 工具辅助完成模型训练和评估代码。\n\n小组项目一：电商用户行为数据分类模型构建 (逻辑回归或SVM)\n\n指导学生使用逻辑回归或 SVM 算法，基于预处理后的电商用户行为数据，构建用户分类模型 (例如：用户购买意愿预测、用户价值分层)。\n明确小组项目一提交内容：模型代码、实验结果报告 (包括模型评估指标)。\n\n\n第二次课: 小组项目一：电商用户行为数据分类模型构建 (模型训练与代码实践)\n\n内容：\n\n学生分组进行小组项目一：电商用户行为数据分类模型构建 (逻辑回归或SVM)\n教师巡回指导，解答学生在模型训练和代码实现中遇到的问题。\n\n实践：\n\n学生以小组为单位，使用 Python 和 AI 工具，构建和训练逻辑回归或 SVM 分类模型。\n完成小组项目一代码和实验报告初稿。\n\n\n\n\n\n\n第4周 (共2次课)\n\n\n第一次课: 分类算法 (二) - 决策树与集成学习 (随机森林)\n\n内容：\n\n决策树：原理、信息增益/基尼系数、scikit-learn 实现、决策树的优缺点、可视化 (graphviz)。\n集成学习：Bagging (随机森林)：原理、scikit-learn 实现、随机森林的优缺点、特征重要性。\n模型评估与选择：模型评估指标回顾、交叉验证、网格搜索 (GridSearchCV) 详细讲解与实践。\n分类模型评估指标的选择和应用场景。\n\n实践：\n\n使用 scikit-learn 构建和评估决策树和随机森林分类模型，并进行模型调优。\n比较不同分类模型在电商用户行为数据集上的性能。\n使用 AI 工具辅助完成模型训练、评估和调优代码。\n\n小组项目一：电商用户行为数据分类模型优化 (随机森林)\n\n指导学生使用随机森林算法，优化电商用户行为数据分类模型，并进行模型性能评估和比较。\n小组项目一：电商用户行为数据探索与预处理 提交 (第5周课前)\n\n\n第二次课: 小组项目一：电商用户行为数据分类优化 (模型优化与报告撰写)\n\n内容：\n\n学生分组进行小组项目一：电商用户行为数据分类优化 (随机森林)\n教师巡回指导，解答学生在模型优化和代码实现中遇到的问题。\n\n实践：\n\n学生以小组为单位，使用 Python 和 AI 工具，优化随机森林分类模型。\n撰写小组项目一实验报告，包括数据预处理、模型构建、模型评估、结果分析和结论。\n\n\n\n\n\n\n第5周 (共2次课)\n\n\n第一次课: 回归算法 (一) - 线性回归与多项式回归\n\n内容：\n\n回归问题概述：应用场景 (房价预测、销量预测、股票价格预测等)。\n线性回归：原理、公式推导 (简要介绍)、scikit-learn 实现、模型评估指标 (均方误差 MSE、均方根误差 RMSE、平均绝对误差 MAE、R-squared)。\n多项式回归：原理、scikit-learn 实现、多项式回归与线性回归的关系。\n正则化：L1 正则化 (LASSO)、L2 正则化 (Ridge) (简要介绍)。\n\n实践：\n\n使用 scikit-learn 构建和评估线性回归和多项式回归模型，应用于房价预测数据集 (小组项目二)。\n使用 AI 工具辅助完成模型训练和评估代码。\n\n小组项目二：房价预测模型构建 (线性回归或多项式回归)\n\n指导学生使用线性回归或多项式回归算法，基于房价数据集，构建房价预测模型。\n明确小组项目二提交内容：模型代码、实验结果报告 (包括模型评估指标)。\n\n\n第二次课: 小组项目二：房价预测模型构建 (模型训练与代码实践)\n\n内容：\n\n学生分组进行小组项目二：房价预测模型构建 (线性回归或多项式回归)\n教师巡回指导，解答学生在模型训练和代码实现中遇到的问题。\n\n实践：\n\n学生以小组为单位，使用 Python 和 AI 工具，构建和训练线性回归或多项式回归模型。\n完成小组项目二代码和实验报告初稿。\n\n\n\n\n\n\n第6周 (共2次课)\n\n\n第一次课: 回归算法 (二) - 集成学习 (XGBoost)\n\n内容：\n\n集成学习：Boosting (XGBoost)：原理 (梯度提升、树模型)、xgboost 库实现、XGBoost 的优缺点、模型参数调优。\n正则化：L1 正则化 (LASSO)、L2 正则化 (Ridge) 详细讲解与实践，应用于线性回归和多项式回归模型。\n回归模型评估指标的选择和应用场景。\n\n实践：\n\n使用 xgboost 库构建和评估 XGBoost 回归模型，并进行模型调优。\n比较 XGBoost 与线性回归、多项式回归在房价预测数据集上的性能。\n使用 AI 工具辅助完成模型训练、评估和调优代码。\n\n小组项目二：房价预测模型优化 (XGBoost)\n\n指导学生使用 XGBoost 算法，优化房价预测模型，并进行模型性能评估和比较。\n小组项目二：房价预测模型构建 (线性/多项式回归) 提交 (第7周课前)\n\n\n第二次课: 小组项目二：房价预测模型优化 (模型优化与报告撰写)\n\n内容：\n\n学生分组进行小组项目二：房价预测模型优化 (XGBoost)\n教师巡回指导，解答学生在模型优化和代码实现中遇到的问题。\n\n实践：\n\n学生以小组为单位，使用 Python 和 AI 工具，优化 XGBoost 回归模型。\n撰写小组项目二实验报告，包括模型构建、模型评估、模型调优、结果分析和结论。\n\n\n\n\n\n\n第7周 (共2次课)\n\n\n第一次课: 聚类算法 (一) - K-Means\n\n内容：\n\n聚类问题概述：应用场景 (用户分群、商品推荐、异常检测等)。\nK-Means 聚类：原理、算法步骤、scikit-learn 实现、K 值选择 (轮廓系数、肘部法则)、K-Means 的优缺点。\n聚类模型评估指标：轮廓系数、 Davies-Bouldin 指数 (简要介绍)。\n聚类结果可视化：散点图、聚类中心可视化。\n\n实践：\n\n使用 scikit-learn 构建和评估 K-Means 聚类模型，应用于用户分群数据集 (小组项目三)。\n使用 AI 工具辅助完成模型训练、评估和可视化代码。\n\n小组项目三：用户分群模型构建 (K-Means)\n\n指导学生使用 K-Means 聚类算法，基于用户分群数据集，构建用户分群模型。\n明确小组项目三提交内容：模型代码、实验结果报告 (包括聚类结果可视化和分析)。\n\n\n第二次课: 小组项目三：用户分群模型构建 (模型训练与代码实践)\n\n内容：\n\n学生分组进行小组项目三：用户分群模型构建 (K-Means)\n教师巡回指导，解答学生在模型训练和代码实现中遇到的问题。\n\n实践：\n\n学生以小组为单位，使用 Python 和 AI 工具，构建和训练 K-Means 聚类模型。\n完成小组项目三代码和实验报告初稿。\n\n\n\n\n\n\n第8周 (共2次课)\n\n\n第一次课: 聚类算法 (二) - DBSCAN\n\n内容：\n\nDBSCAN 聚类：原理 (密度聚类)、算法步骤、scikit-learn 实现、DBSCAN 的优缺点、参数选择。\n聚类算法选择：K-Means vs. DBSCAN，不同聚类算法的应用场景。\n聚类结果评估：轮廓系数、 Davies-Bouldin 指数 详细讲解与实践，聚类结果的业务意义解读。\n聚类结果可视化：高级可视化技巧，例如使用 seaborn 或 plotly 绘制更美观、更具信息量的聚类结果图。\n\n实践：\n\n使用 scikit-learn 构建和评估 DBSCAN 聚类模型，并进行模型调优和参数选择。\n比较 K-Means 和 DBSCAN 在用户分群数据集上的性能和聚类效果。\n使用 AI 工具辅助完成模型训练、评估、可视化和调优代码。\n\n小组项目三：用户分群模型优化 (DBSCAN 或 K-Means 优化)\n\n指导学生使用 DBSCAN 算法或优化 K-Means 算法 (例如：尝试不同的 K 值或初始化方法)，优化用户分群模型，并进行模型性能评估和聚类结果分析。\n小组项目三：用户分群模型构建 (K-Means) 提交 (第9周课前)\n\n\n第二次课: 小组项目三：用户分群模型优化 (模型优化与报告撰写)\n\n内容：\n\n学生分组进行小组项目三：用户分群模型优化 (DBSCAN 或 K-Means 优化)\n教师巡回指导，解答学生在模型优化和代码实现中遇到的问题。\n\n实践：\n\n学生以小组为单位，使用 Python 和 AI 工具，优化 DBSCAN 或 K-Means 聚类模型。\n撰写小组项目三实验报告，包括模型构建、模型评估、聚类结果可视化、结果分析和结论。\n\n\n\n\n\n\n\n第三阶段 (9-13周): 生成式AI探索与应用\n\n第9周 (共2次课)\n\n\n第一次课: 生成式AI 导论 - 大语言模型 (LLM) 与 Prompt 工程\n\n内容：\n\n生成式AI 概述：发展历程、应用场景 (内容创作、对话系统、代码生成等)、与判别式 AI 的区别。\n大语言模型 (LLM)：Transformer 架构 (简要介绍)、预训练、微调、代表性 LLM (GPT, BERT, Llama 等)。\nPrompt 工程：Prompt 的概念、Prompt 设计原则 (清晰、具体、简洁)、常用 Prompt 技巧 (Few-shot, Chain-of-Thought, Instruction Tuning)。\nLangchain 框架：Langchain 简介、核心组件 (Models, Prompts, Chains, Agents)、Langchain 的应用场景。\n\n实践：\n\n体验在线 LLM 产品 (例如：ChatGPT, 文心一言, Bard)，尝试不同的 Prompt，体验 LLM 的文本生成能力。\n使用 AI 工具辅助进行 Prompt 设计和优化。\n\n小组项目四：智能文案生成 Agent 开发 (项目启动与 Prompt 设计)\n\n介绍小组项目四：智能文案生成 Agent 开发，明确项目目标：利用 LLM 和 Langchain 框架，开发一个能够根据用户需求自动生成高质量文案的 Agent。\n布置小组项目四任务：Prompt 设计、Agent 框架搭建、核心功能开发和扩展功能探索。\n小组项目三：用户分群模型优化 (DBSCAN/K-Means) 及报告 提交 (第10周课前)\n\n\n第二次课: 小组项目四：智能文案生成 Agent Prompt 优化与 Langchain 框架初探\n\n内容：\n\n学生分组进行小组项目四：智能文案生成 Agent Prompt 优化\n教师巡回指导，解答学生在 Prompt 设计和优化中遇到的问题。\nLangchain 框架初探：安装 Langchain, Langchain 核心组件 (Models, Prompts) 实践，构建简单的 LLM 应用。\n\n实践：\n\n学生以小组为单位，使用 Python 和 AI 工具，进行智能文案生成 Agent 的 Prompt 设计和优化。\n完成小组项目四 Prompt 设计方案初稿。\n初步体验 Langchain 框架，完成简单的 LLM 应用代码。\n\n\n\n\n\n\n第10周 (共2次课)\n\n\n第一次课: Langchain 核心组件与 Agent 框架搭建\n\n内容：\n\nLangchain 核心组件：Chains (SequentialChain, SimpleSequentialChain, TransformChain), Memory (ConversationBufferMemory, ConversationChain)。\nAgent 框架搭建：Agent 的概念、Agent 类型 (Zero-shot Agent, Conversational Agent)、Langchain Agent 实现、Agent 工具 (Tools) 的使用。\n智能文案生成 Agent 框架设计：确定 Agent 类型、选择 Tools, 设计 Agent 的工作流程。\n\n实践：\n\n使用 Langchain 框架，构建智能文案生成 Agent 的基本框架，包括 Agent, Tools 和 Memory 组件。\n使用 AI 工具辅助完成 Agent 框架代码。\n\n小组项目四：智能文案生成 Agent Agent 框架搭建\n\n指导学生使用 Langchain 框架，搭建智能文案生成 Agent 的基本框架，为后续功能开发奠定基础。\n小组项目四：智能文案生成 Agent Prompt 设计方案 提交 (第11周课前)\n\n\n第二次课: 小组项目四：智能文案生成 Agent Agent 框架代码实践\n\n内容：\n\n学生分组进行小组项目四：智能文案生成 Agent Agent 框架代码实现\n教师巡回指导，解答学生在 Agent 框架搭建和代码实现中遇到的问题。\n\n实践：\n\n学生以小组为单位，使用 Python 和 AI 工具，完成智能文案生成 Agent 的框架代码。\n完成小组项目四 Agent 框架代码初稿。\n\n\n\n\n\n\n第11周 (共2次课)\n\n\n第一次课: 智能文案生成 Agent 核心功能开发 (文案生成)\n\n内容：\n\n智能文案生成 Agent 核心功能开发：\n\n文案生成流程设计： 用户需求分析、Prompt 构建、LLM 调用、文案生成结果处理。\nLangchain Chains 应用： 使用 Chains 组合 Prompt 和 LLM, 实现文案生成流程。\n文案生成质量评估： 常用评估指标 (流畅度、相关性、信息量)、人工评估方法。\n\nLLM 调用与 API Key 管理：如何调用 LLM API (例如：OpenAI API)、API Key 的申请和安全管理。\n\n实践：\n\n使用 Langchain Chains 和 LLM API，实现智能文案生成 Agent 的核心功能：根据用户输入的关键词或主题，自动生成文案。\n使用 AI 工具辅助完成文案生成功能代码。\n\n小组项目四：智能文案生成 Agent 核心功能 (文案生成) 开发\n\n指导学生实现智能文案生成 Agent 的核心功能，使其能够根据用户需求生成基本的文案内容。\n小组项目四：智能文案生成 Agent Agent 框架代码 提交 (第12周课前)\n\n\n第二次课: 小组项目四：智能文案生成 Agent 核心功能代码实践\n\n内容：\n\n学生分组进行小组项目四：智能文案生成 Agent 核心功能 (文案生成) 代码实现\n教师巡回指导，解答学生在文案生成功能开发和代码实现中遇到的问题。\n\n实践：\n\n学生以小组为单位，使用 Python 和 AI 工具，完成智能文案生成 Agent 的核心功能代码。\n完成小组项目四 Agent 核心功能代码初稿。\n\n\n\n\n\n\n第12周 (共2次课)\n\n\n第一次课: 智能文案生成 Agent 功能扩展 (一) - 文案风格控制与优化\n\n内容：\n\n智能文案生成 Agent 功能扩展：\n\n文案风格控制： Prompt 技巧 (风格关键词、指令)、参数调整 (temperature, top_p)、实现文案风格多样化 (例如：正式、幽默、创意)。\n文案优化： Prompt 优化技巧、迭代优化流程、提升文案质量 (例如：信息准确性、逻辑性、吸引力)。\nLangchain Memory 应用： 在 Agent 中引入 Memory 组件，实现对话记忆功能，提升文案生成的连贯性和上下文相关性。\n\nLLM 参数调优：temperature, top_p 等常用参数的含义和作用，参数调优策略。\n\n实践：\n\n扩展智能文案生成 Agent 的功能，实现文案风格控制和优化。\n尝试不同的 Prompt 技巧和参数调整，提升文案生成质量和多样性。\n使用 AI 工具辅助完成功能扩展代码。\n\n小组项目四：智能文案生成 Agent 功能扩展 (文案风格控制与优化)\n\n指导学生扩展智能文案生成 Agent 的功能，使其能够控制文案风格和进行文案优化，提升 Agent 的实用性和用户体验。\n小组项目四：智能文案生成 Agent 核心功能代码 提交 (第13周课前)\n\n\n第二次课: 小组项目四：智能文案生成 Agent 功能扩展代码实践\n\n内容：\n\n学生分组进行小组项目四：智能文案生成 Agent 功能扩展 (文案风格控制与优化) 代码实现\n教师巡回指导，解答学生在功能扩展代码实现中遇到的问题。\n\n实践：\n\n学生以小组为单位，使用 Python 和 AI 工具，完成智能文案生成 Agent 的功能扩展代码。\n完成小组项目四 Agent 功能扩展代码初稿。\n\n\n\n\n\n\n第13周 (共2次课)\n\n\n第一次课: 智能文案生成 Agent 功能扩展 (二) - 文生图 (可选) 与多模态 AI 初探\n\n内容：\n\n智能文案生成 Agent 功能扩展 (可选)：\n\n文生图功能集成： Stable Diffusion WebUI 介绍、API 调用、Langchain 工具集成、实现文生图功能。\n多模态 AI 初探： 多模态 AI 概念、应用场景 (图文生成、跨模态检索)、多模态 LLM 简介 (例如：LLaVA, VisualGPT)。\nAgent 功能扩展思路： 更多 Agent 功能扩展方向 (例如：文案编辑、多语言支持、内容发布)。\n\nStable Diffusion WebUI 实践：安装和配置 Stable Diffusion WebUI, 体验文生图功能，了解常用模型和参数。\n\n实践：\n\n为智能文案生成 Agent 添加文生图功能 (可选)，实现图文结合的内容创作。\n体验 Stable Diffusion WebUI 的文生图功能，尝试不同的模型和 Prompt。\n使用 AI 工具辅助完成文生图功能集成代码。\n\n小组项目四：智能文案生成 Agent 功能扩展 (文生图 - 可选) 与 Agent 报告撰写\n\n鼓励学生为智能文案生成 Agent 添加文生图功能，探索多模态 AI 应用，并开始撰写小组项目四实验报告。\n小组项目四：智能文案生成 Agent 功能扩展代码 提交 (第14周课前)\n\n\n第二次课: 小组项目四：智能文案生成 Agent 功能扩展代码实践与报告撰写指导\n\n内容：\n\n学生分组进行小组项目四：智能文案生成 Agent 文生图功能探索 (可选) 代码实现\n教师巡回指导，解答学生在文生图功能集成和代码实现中遇到的问题。\n小组项目四报告撰写指导： 报告结构、内容要点、撰写技巧。\n\n实践：\n\n学生以小组为单位，使用 Python 和 AI 工具，完成智能文案生成 Agent 的文生图功能集成代码 (可选)。\n开始撰写小组项目四实验报告。\n\n\n\n\n\n\n\n第四阶段 (14-16周): 小组综合项目实战与商业应用拓展\n\n第14-15周 (共4次课): 小组综合项目开发与指导\n\n\n内容：\n\n学生以小组为单位，进行小组综合项目的设计、开发和实验。\n\n指导：\n\n教师在课堂上提供项目指导和技术支持，解答学生在项目开发过程中遇到的问题。\n\n协作：\n\n鼓励学生充分利用 AI 辅助编程工具，提高开发效率，加强团队协作。\n\n检查：\n\n第 15 周进行小组综合项目中期检查，了解项目进展，及时发现和解决问题。\n\n\n\n\n\n第16周 (共1次课): 小组综合项目展示与课程总结\n\n\n第一次课: 小组综合项目展示与答辩\n\n展示：\n\n各小组进行项目成果展示，讲解项目背景、问题定义、技术方案、实验结果、商业价值和创新点。\n\n答辩：\n\n接受教师和同学的提问和点评。\n\n小组综合项目：开放式商业问题 提交 (本周课前)\n\n第二次课: 课程总结与未来展望\n\n总结：\n\n回顾课程内容，总结机器学习和生成式AI的核心概念、算法、技术和应用。\n\n展望：\n\n展望机器学习和生成式AI 在商业领域的未来发展前景，鼓励学生继续深入学习和探索。\n再次强调生成式AI 技术的商业伦理和社会责任。\n\n评估：\n\n进行课程评估和反馈，收集学生对课程的意见和建议，为课程改进提供参考。",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>课程大纲</span>"
    ]
  },
  {
    "objectID": "syllabus.html#项目设置-贯穿课程",
    "href": "syllabus.html#项目设置-贯穿课程",
    "title": "课程大纲",
    "section": "项目设置 (贯穿课程)",
    "text": "项目设置 (贯穿课程)\n\n小组项目 (共4个 + 综合项目)\n\n小组项目一 (电商用户行为数据分析与分类)\n\n学习目标：掌握数据预处理、特征工程、分类算法 (逻辑回归, SVM, 决策树, 随机森林) 的应用，理解分类模型评估指标。\n周期：2 周 (数据预处理 + 模型构建与优化)\n提交时间：\n\n数据预处理结果：第 2 周课前\n分类模型 (逻辑回归/SVM)：第 3 周课前\n分类模型 (随机森林) 及报告：第 5 周课前\n\n数据集: 学生小组自主选择数据集，建议选择电商或零售行业的用户行为数据集。数据集应包含用户行为数据，数据量适中，特征维度不低于10个，且具有一定的分类难度。 鼓励各小组选择不同的数据集，以提高项目实践的多样性。\n\n小组项目二 (房价预测模型构建与优化)\n\n学习目标：掌握回归算法 (线性回归, 多项式回归, XGBoost) 的应用，理解正则化和模型调优方法，掌握回归模型评估指标。\n周期：2 周 (模型构建 + 模型优化与调优)\n提交时间：\n\n回归模型 (线性回归/多项式回归)：第 5 周课前\n回归模型 (XGBoost) 及报告：第 7 周课前\n\n数据集: 学生小组自主选择数据集，建议选择包含城市或地区房价信息的公开数据集。数据集应包含房价相关特征，数据量不低于500条，特征维度不低于8个，且特征之间应具有一定的相关性。 鼓励各小组选择不同的数据集，以提高项目实践的多样性。\n\n小组项目三 (用户分群模型构建与分析)\n\n学习目标：掌握聚类算法 (K-Means, DBSCAN) 的应用，理解聚类算法选择和聚类结果评估方法，掌握聚类结果可视化和分析技巧。\n周期：2 周 (模型构建 + 模型优化与结果分析)\n提交时间：\n\n聚类模型 (K-Means)：第 7 周课前\n聚类模型 (DBSCAN 或 K-Means 优化) 及报告：第 9 周课前\n\n数据集: 学生小组自主选择数据集，建议选择包含用户画像或用户行为特征的数据集。数据集应适用于用户分群任务，数据量不低于300条，特征维度不低于5个，且数据集中应包含可用于区分用户群体的特征。 鼓励各小组选择不同的数据集，以提高项目实践的多样性。\n\n小组项目四 (智能文案生成 Agent 开发)\n\n学习目标：掌握 Prompt 工程、Langchain 框架和 Agent 开发技术，理解 LLM 的应用和局限性，初步接触多模态 AI (可选)。\n周期：4 周 (Prompt 设计 + Agent 框架 + 功能完善 + 扩展探索)\n提交时间：\n\nPrompt 设计方案和 Agent 代码框架：第 10 周课前\nAgent 核心功能 (文案生成)：第 12 周课前\nAgent 功能扩展 (可选) 及报告：第 14 周课前\n\n数据集: 本项目不涉及传统数据集，学生需自行准备或生成 Agent 应用所需的示例数据或知识库 (例如：产品信息、营销知识等)。鼓励各小组根据 Agent 应用场景，构建不同的知识库或示例数据，以体现 Agent 的个性化和创新性。\n\n小组综合项目 (开放式商业问题)\n\n学习目标：综合应用课程所学机器学习和生成式AI知识，解决开放式商业问题，提升创新思维、团队协作和项目管理能力。\n周期：3 周 (项目选题与方案设计 + 项目开发与实验 + 项目展示与报告)\n提交时间：\n\n小组综合项目报告和展示材料：第 16 周课前\n\n数据集: 学生小组根据所选的开放式商业问题自主选择或构建数据集，数据集应与项目主题紧密相关，数据量和难度应与项目目标相匹配。 鼓励各小组选择不同的数据集，以提高项目实践的多样性。\n\n小组人数：建议每组 2-3 人。\n项目形式: 小组合作完成，包括项目方案设计、数据准备 (或环境搭建)、算法/模型实现、实验验证、结果分析、项目展示和项目报告。 每次小组项目提交后，选取 3 个优秀小组在课堂上进行项目讲解和展示，分享经验和成果。",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>课程大纲</span>"
    ]
  },
  {
    "objectID": "syllabus.html#ai-辅助编程工具",
    "href": "syllabus.html#ai-辅助编程工具",
    "title": "课程大纲",
    "section": "AI 辅助编程工具",
    "text": "AI 辅助编程工具\n\n代码编辑器: VS Code, Cursor\n\n特点：轻量级、高效、插件丰富，支持 Jupyter Notebook，适合 Python 开发和机器学习。\n\n代码辅助插件: GitHub Copilot, 通义灵码, Cline 等\n\n功能：代码自动补全、代码片段生成、代码错误检查、自然语言代码解释等，提高编程效率，降低编程难度，辅助 Prompt 设计和 Agent 开发。\n\n机器学习/深度学习库: scikit-learn, TensorFlow, PyTorch\n\n功能：提供丰富的机器学习和深度学习算法、模型和工具，方便学生进行模型构建、训练和评估。\n\n生成式AI 框架: Langchain\n\n功能：简化 LLM 应用和 Agent 开发流程，提供丰富的组件和工具，方便学生快速构建生成式AI应用。\n\n文生图工具: Stable Diffusion WebUI\n\n功能：强大的文生图工具，支持多种模型和参数调整，方便学生进行图像生成和创意设计。",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>课程大纲</span>"
    ]
  },
  {
    "objectID": "syllabus.html#考核方式",
    "href": "syllabus.html#考核方式",
    "title": "课程大纲",
    "section": "考核方式",
    "text": "考核方式\n\n小组项目一 ~ 四 (40%): 根据项目完成质量、代码质量、实验结果、创新性和项目报告进行综合评分，每个项目 10%。\n小组综合项目 (20%): 根据项目选题意义、创新性、实用性、完成度、展示效果和项目报告进行评分 (小组内成员评分可以考虑组内互评和贡献度)。\n课堂参与 (10%): 根据课堂讨论、提问、出勤、作业完成情况等进行评分，鼓励学生积极参与课堂互动。\n期末考试 (30%): 期末考试采用闭卷形式，重点考察学生对机器学习和生成式AI 基础理论、核心概念和算法的掌握程度。",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>课程大纲</span>"
    ]
  },
  {
    "objectID": "week1.html",
    "href": "week1.html",
    "title": "第一周：机器学习导论与Python环境搭建",
    "section": "",
    "text": "第一次课：机器学习导论与Python环境搭建",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>第一周：机器学习导论与Python环境搭建</span>"
    ]
  },
  {
    "objectID": "week1.html#第一次课机器学习导论与python环境搭建",
    "href": "week1.html#第一次课机器学习导论与python环境搭建",
    "title": "第一周：机器学习导论与Python环境搭建",
    "section": "",
    "text": "课程目标\n\n了解机器学习的核心概念和类型 (监督学习、无监督学习、强化学习)。\n理解机器学习与传统统计分析、数据挖掘的区别与联系。\n认识机器学习和生成式AI 在商业领域的应用前景。\n掌握 Python 和 VS Code 的安装配置，包括 Python 解释器、VS Code 编辑器、Python 插件、虚拟环境 venv 的使用。\n初步体验 AI 辅助编程工具，如 GitHub Copilot, 通义灵码, Cline。\n\n\n\n内容概要\n\n机器学习导论\n\n什么是机器学习？\n\n\n\n\n\n\n\n定义\n\n\n\n无需显式编程，让计算机从数据中学习规律和知识。\n\n\n\n\n\n\n\n\n与传统编程的区别\n\n\n\n传统编程 (显式规则) vs. 机器学习 (从数据中学习规则)。\n\n\n\n机器学习的核心概念\n\n监督学习 (Supervised Learning): 从带有标签的数据中学习，用于分类和回归任务。\n\n\n\n\n\n\n\n示例\n\n\n\n垃圾邮件识别 (分类)、房价预测 (回归)。\n\n\n\n无监督学习 (Unsupervised Learning): 从无标签数据中学习数据结构和模式，用于聚类、降维、关联规则挖掘等任务。\n\n\n\n\n\n\n\n示例\n\n\n\n用户分群 (聚类)、商品推荐 (关联规则)。\n\n\n\n强化学习 (Reinforcement Learning): 通过与环境交互学习最优策略，以获得最大奖励。 (简要介绍，本课程侧重监督学习和无监督学习)\n\n\n\n\n\n\n\n示例\n\n\n\n游戏 AI、自动驾驶。\n\n\n机器学习与相关学科\n\n机器学习 vs. 传统统计分析:\n\n侧重点不同：统计分析 (解释性、推断) vs. 机器学习 (预测性、性能)。\n方法论差异：统计分析 (模型假设、参数估计) vs. 机器学习 (算法迭代、模型优化)。\n\n机器学习 vs. 数据挖掘:\n\n目标相似：从数据中发现知识和模式。\n侧重面不同：数据挖掘 (更侧重数据预处理、模式发现) vs. 机器学习 (更侧重模型构建、预测和决策)。\n\n\n机器学习和生成式AI 的商业应用案例\n\n精准营销: 用户画像、个性化推荐、广告投放优化。\n风险管理: 信用评分、欺诈检测、风险预警。\n智能客服: 聊天机器人、智能问答、工单自动化。\n内容创作: 文案生成、图像生成、音乐创作、代码生成 (生成式AI)。\n智能产品与服务: 智能家居、自动驾驶、智能医疗。\n\n\nPython 机器学习环境搭建\n\n安装 Python 解释器:\n\n从 Python 官网下载并安装 Python 解释器: https://www.python.org/downloads/ (建议安装 3.9 及以上版本)\n安装过程中，务必勾选 “Add Python to PATH”，以便在命令行中直接使用 python 和 pip 命令。\n\n\n\n\n\n\n\n重要\n\n\n\n安装 Python 时，请务必勾选 “Add Python to PATH” 选项。\n\n\n\n验证 Python 安装: 打开命令行 (Windows: cmd 或 PowerShell, macOS/Linux: Terminal)，输入 python --version 和 pip --version，查看 Python 和 pip 版本信息。\n\n安装 VS Code 编辑器:\n\n从 VS Code 官网下载并安装 VS Code: https://code.visualstudio.com/download (根据操作系统选择合适的版本)\n\n在 VS Code 中安装 Python 插件:\n\n打开 VS Code，点击左侧侧边栏的 “Extensions” 图标 (或快捷键 Ctrl+Shift+X / Cmd+Shift+X)。\n在搜索框中输入 “Python”，找到 “Python” 插件 (由 Microsoft 提供)，点击 “Install” 进行安装。\nPython 插件功能: 代码智能提示、代码格式化、代码调试、Jupyter Notebook 支持、虚拟环境管理等。\n\n在 VS Code 中选择 Python 解释器:\n\n安装 Python 插件后，VS Code 会自动检测系统中的 Python 解释器。\n手动选择 Python 解释器: 点击 VS Code 窗口右下角的 Python 版本号，或使用快捷键 Ctrl+Shift+P / Cmd+Shift+P，输入 “Python: Select Interpreter”，选择已安装的 Python 解释器。\n管理多个 Python 版本: 如果安装了多个 Python 版本，可以在 “Select Interpreter” 菜单中选择不同的版本。\n\n使用 venv 创建和管理虚拟环境:\n\n\n\n\n\n\n什么是虚拟环境\n\n\n\n虚拟环境是一个隔离的 Python 环境，可以为不同的项目安装不同的 Python 包，避免包版本冲突。\n\n\n\n使用 venv 创建虚拟环境: 在项目根目录下，打开命令行，输入 python -m venv .venv (.venv 为虚拟环境文件夹名称，可以自定义)。\n激活虚拟环境:\n\nWindows (cmd): .venv\\Scripts\\activate.bat\nWindows (PowerShell): .venv\\Scripts\\Activate.ps1\nmacOS/Linux: source .venv/bin/activate\n激活后，命令行提示符前会显示虚拟环境名称 (.venv)。\n\n在 VS Code 中使用虚拟环境: VS Code 会自动检测项目中的虚拟环境，并在右下角显示。 如果没有自动检测到，可以手动选择虚拟环境解释器 (参考 “选择 Python 解释器” 步骤)。\n在虚拟环境中安装 Python 包: 激活虚拟环境后，使用 pip install 包名 命令安装的包，只会安装到当前虚拟环境中，不会影响全局 Python 环境。\n\n安装 Python 常用库 (在虚拟环境中):\n\n激活虚拟环境后，使用 pip install scikit-learn pandas numpy matplotlib seaborn 命令安装常用库。\n\n体验 AI 辅助编程工具:\n\nGitHub Copilot, 通义灵码, Cline 等代码辅助插件: 代码自动补全、代码片段生成、代码错误检查、自然语言代码解释等功能演示。\nCursor 代码编辑器: 内置 AI 功能的代码编辑器体验。(https://cursor.sh/)\n配置 pip 国内镜像源 (可选，但推荐):\n\n\n\n\n\n\n\n为什么要配置国内镜像源\n\n\n\npip 默认使用国外的 PyPI 仓库下载 Python 包，国内下载速度可能较慢。配置国内镜像源可以显著提升下载速度，尤其是在网络环境不佳的情况下。\n\n\n\n常用国内镜像源:\n\n清华大学: https://pypi.tuna.tsinghua.edu.cn/simple\n阿里云: https://mirrors.aliyun.com/pypi/simple/\n豆瓣: https://pypi.doubanio.com/simple/\n中国科学技术大学: https://pypi.mirrors.ustc.edu.cn/simple/\n华中科技大学: https://pypi.hustunique.com/\nWindows 配置方法:\n\n在 用户目录 (例如 C:\\Users\\YourUserName) 下创建文件夹 pip。\n在 pip 文件夹下创建文件 pip.ini。\n用文本编辑器打开 pip.ini，写入以下内容 (以清华大学镜像源为例):\n\n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n[install]\ntrusted-host = pypi.tuna.tsinghua.edu.cn\nmacOS/Linux 配置方法:\n\n在 用户目录 (例如 /Users/YourUserName 或 ~) 下创建文件夹 .pip (注意文件夹名前面的点)。\n在 .pip 文件夹下创建文件 pip.conf。\n用文本编辑器打开 pip.conf，写入以下内容 (以清华大学镜像源为例):\n\n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n[install]\ntrusted-host = pypi.tuna.tsinghua.edu.cn\n验证镜像源是否生效: 配置完成后，尝试使用 pip install 包名 命令安装 Python 包，观察下载速度是否提升。 也可以使用 pip config get global.index-url 命令查看当前 pip 配置的镜像源。\n\n\n\n\n\n\n实践环节\n\nPython 解释器安装: 学生根据教程，从 Python 官网下载并安装 Python 解释器，并验证安装成功。\nVS Code 编辑器安装: 安装 VS Code 编辑器。\nVS Code Python 插件安装和配置: 在 VS Code 中安装 Python 插件，并选择 Python 解释器。\n使用 venv 创建和激活虚拟环境: 在指定目录下创建虚拟环境，并尝试激活和退出虚拟环境。\n在虚拟环境中安装常用 Python 库: 激活虚拟环境后，使用 pip install 命令安装 scikit-learn, pandas, numpy, matplotlib, seaborn 等常用库。\n体验 AI 辅助编程工具: 安装 GitHub Copilot 或 通义灵码 插件 (或体验 Cursor 编辑器)，尝试使用 AI 工具辅助编写简单的 Python 代码，并在虚拟环境中运行。\n\n\n\n课后作业\n\n完成 Python 和 VS Code 环境搭建，并成功创建和激活虚拟环境，安装常用 Python 库，确保环境配置成功。\n查阅资料，了解 Python 虚拟环境的作用和优势。\n思考题： 为什么在 Python 项目开发中推荐使用虚拟环境？ 不使用虚拟环境可能带来哪些问题？\n\n\n\n相关资源\n\nPython 官网下载: https://www.python.org/downloads/\nVS Code 官网下载: https://code.visualstudio.com/download\nVS Code Python 插件: https://marketplace.visualstudio.com/items?itemName=ms-python.python\nPython venv 虚拟环境官方文档: https://docs.python.org/3/library/venv.html\nPython 机器学习常用库文档:\n\nscikit-learn: scikit-learn.org\npandas: pandas.pydata.org\nnumpy: numpy.org\nmatplotlib: matplotlib.org\nseaborn: seaborn.pydata.org\n\nAI 辅助编程工具:\n\nGitHub Copilot: github.com/features/copilot\n通义灵码: tongyi.aliyun.com/lingma\nCursor: cursor.sh",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>第一周：机器学习导论与Python环境搭建</span>"
    ]
  },
  {
    "objectID": "week1.html#第二次课python-基础语法与数据操作",
    "href": "week1.html#第二次课python-基础语法与数据操作",
    "title": "第一周：机器学习导论与Python环境搭建",
    "section": "第二次课：Python 基础语法与数据操作",
    "text": "第二次课：Python 基础语法与数据操作\n\n课程目标\n\n回顾 Python 基础语法，包括变量、数据类型、运算符、控制流、函数和模块。\n掌握 Numpy 库的基本操作，包括数组创建、数组运算和常用函数。\n掌握 Pandas 库的基本操作，包括数据结构 (Series, DataFrame)、数据读取、数据选择和数据清洗 (重复值处理)。\n能够使用 AI 辅助编程工具完成 Python 基础语法和数据操作的编程练习。\n\n\n\n内容概要\n\nPython 基础语法回顾\n\n变量与数据类型:\n\n变量命名规则、动态类型。\n常用数据类型：整型 (int)、浮点型 (float)、字符串 (str)、布尔型 (bool)、列表 (list)、元组 (tuple)、字典 (dict)、集合 (set)。\n\n运算符:\n\n算术运算符、比较运算符、逻辑运算符、赋值运算符、成员运算符、身份运算符。\n\n控制流:\n\n条件语句：if, elif, else。\n循环语句：for, while，break, continue。\n\n函数:\n\n函数定义、函数参数、函数返回值、匿名函数 (lambda)。\n\n模块与包:\n\n模块导入：import, from ... import ...。\n常用内置模块：math, random, os, sys, datetime。\n\n\nNumpy 基础\n\nNumpy 数组 (ndarray):\n\n数组创建：np.array(), np.zeros(), np.ones(), np.arange(), np.linspace(), np.random.rand() 等。\n数组属性：shape, dtype, ndim, size。\n数组索引和切片。\n数组维度变换：reshape(), flatten(), transpose()。\n\n数组运算:\n\n元素级运算：加减乘除、幂运算、比较运算。\n矩阵运算：矩阵乘法 (np.dot(), @ 运算符)。\n广播 (broadcasting) 机制。\n\n常用函数:\n\n数学函数：np.sin(), np.cos(), np.exp(), np.log(), np.sqrt() 等。\n统计函数：np.mean(), np.median(), np.std(), np.max(), np.min(), np.sum() 等。\n排序和查找：np.sort(), np.argsort(), np.unique(), np.where() 等。\n\n\nPandas 基础\n\nPandas 数据结构:\n\nSeries: 带标签的一维数组，类似于带索引的列表。\n\nSeries 创建、索引、切片、常用属性和方法。\n\nDataFrame: 带标签的二维数据表，类似于 Excel 表格或 SQL 表。\n\nDataFrame 创建、列选择、行选择、索引、切片、常用属性和方法。\n\n\n数据读取:\n\npd.read_csv(): 读取 CSV 文件。\npd.read_excel(): 读取 Excel 文件。\npd.read_json(): 读取 JSON 文件。\n常用参数：filepath_or_buffer, sep, header, index_col, encoding 等。\n\n数据选择:\n\n列选择：df['列名'], df[['列名1', '列名2']]。\n行选择：df.loc[] (标签索引), df.iloc[] (位置索引), 条件索引。\nloc, iloc, [] 索引方式的区别和应用场景。\n\n数据清洗 (初步):\n\n重复值处理: df.duplicated(), df.drop_duplicates()。\n缺失值处理: (简要介绍，下周详细讲解) df.isnull(), df.fillna(), df.dropna()。\n\n\n\n\n\n实践环节\n\nPython 基础语法编程练习: 完成 Python 基础语法的编程练习，例如：\n\n使用循环和条件语句解决简单问题 (例如：判断闰年、计算阶乘)。\n编写函数实现特定功能 (例如：计算列表平均值、判断字符串是否回文)。\n\nNumpy 数组操作练习: 完成 Numpy 数组创建、运算和常用函数的练习，例如：\n\n创建不同类型的 Numpy 数组，并进行属性查看和维度变换。\n进行数组的元素级运算和矩阵运算。\n使用 Numpy 常用函数进行统计分析和数据处理。\n\nPandas 数据操作练习: 完成 Pandas 数据结构创建、数据读取、数据选择和数据清洗的练习，例如：\n\n创建 Series 和 DataFrame，并进行基本操作。\n读取 CSV 文件，并进行数据查看和选择。\n使用 Pandas 进行重复值查找和删除。\n\n使用 AI 工具辅助完成 Python 代码: 在编程练习过程中，积极使用 AI 辅助编程工具，提高代码编写效率和准确性。\n\n\n\n课后作业\n\n完成 Python 基础语法和数据操作的编程练习，并将代码上传到 GitHub 仓库。\n预习下周课程内容：数据预处理与特征工程基础。\n思考题： Series 和 DataFrame 的区别和应用场景？ loc 和 iloc 索引方式有何不同？\n\n\n\n相关资源\n\nPython 官方文档: docs.python.org\nNumpy 官方文档: numpy.org/doc/stable/\nPandas 官方文档: pandas.pydata.org/docs/\nW3School Python 教程: www.w3schools.com/python/\n廖雪峰 Python 教程: www.liaoxuefeng.com/wiki/1016959663602400",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>第一周：机器学习导论与Python环境搭建</span>"
    ]
  },
  {
    "objectID": "week2.html",
    "href": "week2.html",
    "title": "第二周：数据预处理与特征工程基础",
    "section": "",
    "text": "第二次课：数据预处理与特征工程基础",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>第二周：数据预处理与特征工程基础</span>"
    ]
  },
  {
    "objectID": "week2.html#第二次课数据预处理与特征工程基础",
    "href": "week2.html#第二次课数据预处理与特征工程基础",
    "title": "第二周：数据预处理与特征工程基础",
    "section": "",
    "text": "课程目标\n\n掌握使用 Pandas 进行数据加载和探索的方法，包括数据读取、查看、统计分析和可视化。\n掌握常见的数据清洗方法，包括缺失值处理 (删除、填充) 和异常值处理 (检测与处理)。\n理解特征工程的基本概念和方法，包括数值特征处理 (特征缩放、特征转换) 和类别特征处理 (独热编码、标签编码)。\n掌握使用 Scikit-learn 进行数据预处理和特征工程的常用方法。\n能够使用 AI 辅助编程工具完成数据预处理和特征工程的编程练习。\n了解小组项目一：电商用户行为数据探索与预处理 的目标、数据集和任务要求。\n\n\n\n内容概要\n\n数据加载与探索\n\n使用 Pandas 读取数据:\n\npd.read_csv(), pd.read_excel() 等常用数据读取函数。\n常用参数：filepath_or_buffer, sep, header, index_col, encoding 等。\n\n数据查看:\n\ndf.head(), df.tail(), df.sample(): 查看数据的前几行、后几行或随机抽样行。\ndf.info(): 查看数据类型、缺失值情况、内存占用等信息。\ndf.describe(): 查看数值特征的统计描述 (均值、标准差、最小值、最大值、分位数等)。\ndf.shape, df.columns, df.index, df.dtypes: 查看数据维度、列名、索引和数据类型。\n\n数据基本统计分析:\n\n数值特征统计：df['列名'].mean(), df['列名'].median(), df['列名'].std(), df['列名'].max(), df['列名'].min(), df['列名'].value_counts() 等。\n类别特征统计：df['列名'].value_counts(), df['列名'].unique(), df['列名'].nunique() 等。\n相关性分析：df.corr() (计算特征之间的相关系数)。\n\n数据可视化 (初步):\n\n直方图：df['列名'].hist() (查看数值特征分布)。\n箱线图：df.boxplot(column=['列名']) (查看数值特征的箱线图，检测异常值)。\n散点图：df.plot.scatter(x='列名1', y='列名2') (查看两个数值特征之间的关系)。\n柱状图：df['列名'].value_counts().plot.bar() (查看类别特征的分布)。\n使用 matplotlib 和 seaborn 进行更高级的数据可视化 (下周详细讲解)。\n\n\n数据清洗\n\n缺失值处理:\n\n检测缺失值: df.isnull(), df.sum(), df.isnull().sum(), missingno 库 (可视化缺失值)。\n缺失值处理策略:\n\n删除法: df.dropna() (删除包含缺失值的行或列，慎用，可能丢失信息)。\n填充法: df.fillna(value), df['列名'].fillna(value) (使用固定值、均值、中位数、众数等填充缺失值)。\n插值法: df.interpolate() (使用插值方法估计缺失值，例如线性插值、多项式插值等)。\n高级方法: 使用模型预测缺失值 (例如 KNN 填充、回归填充等，本课程不深入讲解)。\n\n\n\n\n\n\n\n\n选择合适的缺失值处理策略\n\n\n\n需要根据具体情况和业务理解。\n\n\n异常值处理:\n\n异常值检测方法:\n\n箱线图 (Boxplot): 箱线图以外的点通常被认为是异常值。\nZ-score: 计算 Z-score，绝对值大于阈值 (例如 3) 的被认为是异常值。\nIQR (四分位距): 超出 Q1 - 1.5IQR 或 Q3 + 1.5IQR 范围的值被认为是异常值。\n其他方法: 聚类、LOF (局部离群因子) 等算法 (本课程不深入讲解)。\n\n异常值处理策略:\n\n删除法: 直接删除异常值 (慎用，可能丢失信息)。\n替换法: 使用均值、中位数、边界值等替换异常值。\n视为缺失值: 将异常值替换为缺失值，再进行缺失值处理。\n不处理: 有些情况下，异常值可能包含有价值的信息，可以考虑不处理。\n\n\n\n\n\n\n\n\n异常值处理\n\n\n\n同样需要根据具体情况和业务理解。\n\n\n\n特征工程基础\n\n数值特征处理:\n\n特征缩放 (Feature Scaling): 将数值特征缩放到一定范围，避免特征量纲不一致和数值过大/过小带来的问题。\n\n标准化 (Standardization): 将特征缩放到均值为 0，标准差为 1 的分布 (也称 Z-score 归一化)。\n\n公式：x_scaled = (x - mean) / std\nsklearn.preprocessing.StandardScaler\n\n归一化 (Normalization): 将特征缩放到 0 和 1 之间 (也称 Min-Max 缩放)。\n\n公式：x_scaled = (x - min) / (max - min)\nsklearn.preprocessing.MinMaxScaler\n\n其他缩放方法: RobustScaler (基于四分位距缩放，对异常值更鲁棒), MaxAbsScaler (绝对值最大值缩放) 等。\n\n\n\n\n\n\n\n\n选择合适的缩放方法\n\n\n\n需要根据数据分布和模型特点。\n\n\n\n特征转换 (Feature Transformation): 对数值特征进行函数变换，使其更符合模型假设或业务需求。\n\n多项式特征: 将特征进行多项式扩展，增加特征的非线性性。\n\n例如：将特征 x 转换为 x, x^2, x^3 等。\nsklearn.preprocessing.PolynomialFeatures\n\n对数变换: 对特征取对数，减小数值范围，平滑数据分布，处理长尾分布。\n\n例如：log(x + 1) (加 1 是为了避免对 0 取对数)。\nnumpy.log1p, sklearn.preprocessing.PowerTransformer\n\n指数变换: 对特征取指数。\nBox-Cox 变换, Yeo-Johnson 变换: 更通用的幂变换，可以处理不同分布的数据。\n\nsklearn.preprocessing.PowerTransformer\n\n\n\n\n\n\n\n\n\n选择合适的特征转换方法\n\n\n\n根据业务理解和数据探索选择。\n\n\n类别特征处理:\n\n独热编码 (One-Hot Encoding): 将类别特征转换为多个二元特征，每个类别对应一列，存在该类别则为 1，否则为 0。\n\n适用于类别之间没有顺序关系的情况 (例如：颜色、城市)。\npandas.get_dummies, sklearn.preprocessing.OneHotEncoder\n\n\n\n\n\n\n\n\n注意\n\n\n\n处理高基数类别特征 (类别数量过多) 可能导致维度灾难。\n\n\n\n标签编码 (Label Encoding): 将类别特征转换为数值标签，每个类别对应一个整数。\n\n适用于类别之间有顺序关系的情况 (例如：学历、等级)。\nsklearn.preprocessing.LabelEncoder\n\n\n\n\n\n\n\n\n注意\n\n\n\n标签编码可能会引入类别之间的顺序关系，如果类别没有实际顺序意义，可能不适用。\n\n\n\n顺序编码 (Ordinal Encoding): 类似于标签编码，但可以自定义类别顺序。\n\n适用于类别之间有明确顺序关系的情况。\nsklearn.preprocessing.OrdinalEncoder\n\n二进制编码 (Binary Encoding), 效应编码 (Effect Encoding), 目标编码 (Target Encoding) 等其他类别特征编码方法 (本课程不深入讲解)。\n\n\n\n\n\n\n\n选择合适的类别特征编码方法\n\n\n\n需要根据数据特点和模型需求。\n\n\n\nScikit-learn 数据预处理和特征工程常用模块\n\nsklearn.preprocessing: 提供了各种数据预处理和特征工程的函数和类，例如：\n\nStandardScaler, MinMaxScaler, RobustScaler, MaxAbsScaler (特征缩放)。\nPolynomialFeatures, PowerTransformer (特征转换)。\nOneHotEncoder, LabelEncoder, OrdinalEncoder (类别特征编码)。\nSimpleImputer (缺失值填充)。\n\nsklearn.impute: 提供了缺失值填充的类，例如 SimpleImputer, KNNImputer (KNN 填充), IterativeImputer (迭代填充)。\nsklearn.feature_selection: 提供了特征选择的类 (下周讲解)。\n\n\n\n\n\n\n熟练使用 Scikit-learn\n\n\n\n可以高效地进行数据预处理和特征工程。\n\n\n\n小组项目一：电商用户行为数据探索与预处理 (案例介绍与数据准备)\n\n项目背景: 电商平台积累了大量的用户行为数据，例如用户的点击、浏览、购买、加购、收藏等行为。 通过分析这些数据，可以了解用户兴趣偏好、购买行为模式，为个性化推荐、精准营销、用户增长等提供数据支持。\n数据集: 鼓励学生小组自主选择数据集，建议选择电商或零售行业的用户行为数据集。 数据集应包含用户行为数据，数据量适中，特征维度不低于10个，且具有一定的分类难度。 鼓励各小组选择不同的数据集，以提高项目实践的多样性。 (本课程提供 阿里巴巴天池 - 淘宝用户行为数据 作为示例数据集)。\n\n(示例数据集) 阿里巴巴天池 - 淘宝用户行为数据: 数据集包含 2000 万条淘宝用户的行为记录，字段包括：用户ID、商品ID、商品类目ID、行为类型 (点击、浏览、加购、购买)、时间戳。\n数据已进行简化处理，只保留了部分用户和商品数据，并转换为 CSV 格式，方便教学使用。\n\n项目目标: 对电商用户行为数据进行探索性数据分析 (EDA) 和预处理，为后续的机器学习建模 (例如用户行为预测、商品推荐) 做好数据准备。\n项目任务 (小组完成):\n\n数据探索:\n\n加载数据集，查看数据基本信息 (数据类型、缺失值等)。\n分析用户行为类型分布、时间分布、用户和商品数量等。\n可视化用户行为数据，例如用户行为时间序列图、商品销量排行榜等。\n\n数据清洗:\n\n处理缺失值 (如果存在)。\n检测和处理异常值 (例如时间戳异常)。\n根据数据探索结果，进行必要的数据清洗操作。\n\n特征工程:\n\n基于用户行为数据，构建用户特征和商品特征。 (例如：用户点击次数、购买次数、浏览商品类目数；商品被点击次数、被购买次数等)。\n可以尝试构建一些交叉特征或衍生特征。\n对特征进行必要的预处理 (例如特征缩放、类别编码)。\n\n提交内容:\n\n预处理后的数据集 (CSV 格式)。\nPython 代码 (Jupyter Notebook 或 Python 脚本)，包含数据探索、清洗和特征工程的完整代码，代码需要有清晰的注释。\n小组分工说明 (可选)。\n\n\n评分标准: 数据预处理的完整性、代码的规范性、数据探索的深入程度、特征工程的合理性。\n下周第二次课进行小组项目展示和代码讲解。\n\n\n\n\n实践环节\n\n数据加载与探索练习: 使用 Pandas 读取 CSV 数据集 (提供示例数据集)，进行数据查看、统计分析和可视化练习。\n数据清洗练习: 对示例数据集进行缺失值和异常值处理练习，尝试不同的处理策略，并比较效果。\n特征工程基础练习: 对示例数据集进行数值特征缩放、特征转换和类别特征编码练习，使用 Scikit-learn 提供的工具。\n小组项目一：数据探索与预处理实践: 小组合作，开始进行电商用户行为数据集的数据探索、数据清洗和特征工程，完成数据预处理代码初稿。\n使用 AI 工具辅助完成数据预处理和特征工程代码，提高代码编写效率。\n\n\n\n课后作业\n\n完成数据加载、数据查看、数据基本统计分析和可视化的编程练习，并将代码上传到 GitHub 仓库。\n完成数据清洗 (缺失值处理、异常值处理) 和特征工程 (数值特征处理、类别特征处理) 的编程练习，并将代码上传到 GitHub 仓库。\n小组合作完成小组项目一：电商用户行为数据探索与预处理 的数据预处理代码，并提交预处理后的数据集和代码到指定平台 (例如 GitHub 仓库)。\n预习下周课程内容：特征选择与降维。\n思考题： 在数据预处理和特征工程中，如何选择合适的方法和策略？ 数据预处理和特征工程对机器学习模型性能的影响？\n\n\n\n相关资源\n\nPandas 官方文档: pandas.pydata.org/docs/\nScikit-learn 官方文档: scikit-learn.org/stable/\nScikit-learn Preprocessing 模块文档: scikit-learn.org/stable/modules/preprocessing.html\nScikit-learn Impute 模块文档: scikit-learn.org/stable/modules/impute.html\n《Python Data Science Handbook》: jakevdp.github.io/PythonDataScienceHandbook/ (Chapter 3, Chapter 4, Chapter 5)\n《Hands-On Machine Learning with Scikit-Learn, Keras & TensorFlow》: www.oreilly.com/library/view/hands-on-machine-learning/9781098125973/ (Chapter 2, Chapter 3)\n阿里巴巴天池 - 淘宝用户行为数据: https://tianchi.aliyun.com/dataset/dataDetail?dataId=649",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>第二周：数据预处理与特征工程基础</span>"
    ]
  },
  {
    "objectID": "week2.html#第三次课特征选择与降维-下周内容预告",
    "href": "week2.html#第三次课特征选择与降维-下周内容预告",
    "title": "第二周：数据预处理与特征工程基础",
    "section": "第三次课：特征选择与降维 (下周内容预告)",
    "text": "第三次课：特征选择与降维 (下周内容预告)\n\n课程目标 (下周)\n\n理解特征选择和降维的目的和意义。\n掌握常用的特征选择方法，包括过滤式、包裹式和嵌入式方法。\n掌握常用的降维方法，包括 PCA 和 t-SNE。\n能够使用 Scikit-learn 进行特征选择和降维操作。\n\n\n\n内容概要 (下周)\n\n特征选择\n\n特征选择的目的和意义：降维、去除冗余特征、提高模型性能、可解释性。\n特征选择方法：\n\n过滤式 (Filter methods): 基于特征与目标变量之间的统计指标进行选择 (例如：方差选择、相关系数、卡方检验、互信息)。\n包裹式 (Wrapper methods): 将特征子集的选择看作搜索问题，使用模型性能作为评价指标进行选择 (例如：递归特征消除 RFE)。\n嵌入式 (Embedded methods): 将特征选择融入到模型训练过程中 (例如：L1 正则化、树模型特征重要性)。\n\nScikit-learn 特征选择模块：sklearn.feature_selection。\n\n降维\n\n降维的目的和意义：降维、可视化、去除噪声、提高计算效率。\n常用降维方法：\n\n主成分分析 (PCA): 线性降维方法，通过正交变换将数据投影到低维空间，使得投影后的数据方差最大化。\nt-SNE: 非线性降维方法，用于高维数据可视化，将高维数据映射到低维空间，保持数据点的局部邻域结构。\nScikit-learn 降维模块：sklearn.decomposition (PCA), sklearn.manifold (t-SNE)。\n\n\n实践环节 (下周)\n\n使用 Scikit-learn 进行特征选择和降维的编程练习。\n结合实际数据集，应用特征选择和降维方法，并评估模型性能。\n\n\n\n\n课后作业 (下周)\n\n完成特征选择和降维的编程练习，并将代码上传到 GitHub 仓库。\n查阅资料，深入了解特征选择和降维的原理和应用场景。\n思考题：特征选择和降维的区别和联系？ 如何根据实际问题选择合适的特征选择和降维方法？\n\n\n\n相关资源 (下周)\n\nScikit-learn Feature Selection 模块文档: scikit-learn.org/stable/modules/feature_selection.html\nScikit-learn Decomposition 模块文档 (PCA): scikit-learn.org/stable/modules/decomposition.html\nScikit-learn Manifold 模块文档 (t-SNE): scikit-learn.org/stable/modules/manifold.html\n《Python Data Science Handbook》: jakevdp.github.io/PythonDataScienceHandbook/ (Chapter 5)\n《Hands-On Machine Learning with Scikit-Learn, Keras & TensorFlow》: www.oreilly.com/library/view/hands-on-machine-learning/9781098125973/ (Chapter 7, Chapter 8)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>第二周：数据预处理与特征工程基础</span>"
    ]
  }
]