"""
机器学习基础介绍模块
"""

import streamlit as st
import os
from utils.fonts import get_svg_style

def show_ml_introduction():
    """显示机器学习基础介绍内容"""
    
    st.subheader("机器学习简介")
    
    st.markdown("""
    **机器学习**是人工智能的一个分支，它让计算机系统能够通过数据学习和改进，而无需显式编程。
    机器学习算法可以从数据中发现模式，并使用这些模式进行预测或决策。
    """)
    
    # 显示机器学习基本概念图
    st.markdown("### 机器学习的基本概念")
    
    # 使用st.image()显示SVG图片
    svg_path = os.path.join("img", "ml_basics_concept.svg")
    if os.path.exists(svg_path):
        st.image(svg_path)
    else:
        st.warning("图片文件不存在，请确保已创建SVG文件")
    
    st.markdown("""
    ### 机器学习的主要类型
    
    1. **监督学习**：算法从带标签的训练数据中学习，预测新数据的标签
       - 分类：预测离散类别（如垃圾邮件检测）
       - 回归：预测连续值（如房价预测）
    
    2. **无监督学习**：算法从无标签数据中学习，寻找数据中的隐藏结构
       - 聚类：将相似的数据点分组（如客户细分）
       - 降维：减少数据的特征数量，保留重要信息
    
    3. **强化学习**：算法通过与环境交互学习行为，以最大化累积奖励
       - 应用：游戏AI、机器人控制、自动驾驶
    """)
    
    # 显示机器学习工作流程图
    st.markdown("### 机器学习的一般工作流程")
    
    # 使用st.image()显示SVG图片
    svg_path = os.path.join("img", "ml_workflow.svg")
    if os.path.exists(svg_path):
        st.image(svg_path)
    else:
        st.warning("图片文件不存在，请确保已创建SVG文件")
    
    st.markdown("""
    ### 机器学习的关键挑战
    
    1. **数据质量**：机器学习模型的性能很大程度上取决于训练数据的质量和数量
    
    2. **特征工程**：选择和创建合适的特征对模型性能至关重要
    
    3. **模型选择**：为特定问题选择合适的算法和模型架构
    
    4. **过拟合和欠拟合**：平衡模型的复杂性，以及在训练数据和新数据上的表现
    
    5. **计算资源**：某些模型（尤其是深度学习）需要大量计算资源
    
    6. **解释性**：理解和解释模型的预测，特别是在关键决策应用中
    """)
    
    # 提示学生思考
    st.info("""
    **思考问题**：
    
    1. 你能想到日常生活中至少3个使用机器学习的例子吗？
    2. 在学习机器学习的过程中，你认为最具挑战性的部分是什么？
    3. "数据是机器学习的燃料"，你如何理解这句话？
    """) 