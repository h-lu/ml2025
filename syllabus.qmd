---
title: "课程大纲"
---

# 课程概述

本课程为经管学生设计，旨在弱化复杂的数学理论，侧重机器学习和生成式AI的实战应用，并深度结合 AI 辅助编程工具。课程共计 16 周，每周两次课，每次 1.5 小时。课程以项目为中心，贯穿始终，帮助学生掌握核心技能并培养创新思维。

## 课程目标

完成本课程后，学生将能够：

*   **熟练运用 AI 辅助编程工具:**  例如 GitHub Copilot, Cursor, 通义灵码等，提升代码编写效率和质量。
*   **理解核心概念:** 解释机器学习和生成式AI的核心概念，并区分不同算法的适用场景。
*   **掌握编程工具:** 熟练使用 VS Code, Cursor 等代码编辑器，以及 GitHub Copilot, 通义灵码, Cline 等 AI 辅助编程工具，以及 `scikit-learn`, `TensorFlow`, `PyTorch`, `Langchain` 等 Python 库进行机器学习和生成式AI编程。
*   **应用经典算法:** 运用分类、回归、聚类等经典机器学习算法，以及 Prompt 工程、Stable Diffusion 等生成式AI技术，解决实际商业问题 (例如：客户分类、销量预测、图像生成、Agent 开发)。
*   **团队协作:** 有效地进行团队合作，完成四个具有实际商业应用价值的小组项目，并撰写项目报告和进行项目展示。

## 课程结构

课程分为四个阶段，循序渐进地引导学生从理论到实践，最终完成小组项目，并拓展到更广泛的商业应用场景和伦理考量。

*   **每个阶段都将深度结合 AI 辅助编程工具，提升学习效率和编程体验。**
*   **阶段一 (1-2周): 机器学习与Python入门**
    *   目标：建立机器学习基础概念，熟悉Python编程环境和AI辅助工具。
*   **阶段二 (3-8周): 机器学习核心算法实践**
    *   目标：掌握分类、回归、聚类等核心机器学习算法，并能应用于实际问题。
*   **阶段三 (9-13周): 生成式AI探索与应用**
    *   目标：了解大语言模型、多模态AI等生成式AI技术，掌握Prompt工程和Agent开发等技能。
*   **阶段四 (14-16周): 小组综合项目实战与商业应用拓展**
    *   目标：团队合作，综合应用机器学习和生成式AI技术解决实际商业问题，并拓展到更广泛的商业应用场景和伦理考量。

## 每周课程安排

以下是详细的每周课程内容和项目安排，每次课程 1.5 小时。

### 第一阶段 (1-2周): 机器学习与Python入门

#### 第1周 (共2次课)

::: {#week1-1}
*   **第一次课: 机器学习导论与Python环境搭建**
    *   内容：
        *   讲解机器学习的核心概念：监督学习、无监督学习、强化学习 (简要介绍)。
        *   对比机器学习与传统统计分析、数据挖掘。
        *   展示机器学习和生成式AI在商业领域的应用案例 (例如：精准营销、风险管理、智能客服、内容创作)。
        *   Python 机器学习环境搭建：**VS Code, Python, Jupyter 插件 (Extension),  `scikit-learn`, `pandas`, `numpy` 等常用库安装**。
        *   介绍并体验 AI 辅助编程工具 (例如：GitHub Copilot, 通义灵码, Cline)。
    *   实践：
        *   熟悉 VS Code, Jupyter Notebook 插件和基本的 Python 数据操作。
        *   使用 AI 工具辅助编写简单的 Python 代码，体验代码自动补全和生成功能。
*   **第二次课: Python 基础语法与数据操作**

    *   内容：
        *   Python 基础语法回顾：变量、数据类型、运算符、控制流 (循环、条件语句)、函数、模块。
        *   `Numpy` 基础：数组创建、数组运算、常用函数。
        *   `Pandas` 基础：数据结构 (Series, DataFrame)、数据读取、数据选择、数据清洗 (重复值处理)。
    *   实践：
        *   完成 Python 基础语法和数据操作的编程练习。
        *   使用 AI 工具辅助完成 Python 代码。
:::

#### 第2周 (共2次课)

::: {#week2-1}
*   **第一次课: 数据预处理与特征工程基础**
    *   内容：
        *   数据加载与探索：使用 `pandas` 读取和查看数据，进行数据基本统计分析和可视化。
        *   数据清洗：缺失值处理策略 (删除、填充)、异常值检测与处理 (箱线图、Z-score)。
        *   特征工程基础：
            *   数值特征处理：特征缩放 (标准化、归一化)、特征转换 (多项式特征)。
            *   类别特征处理：独热编码、标签编码。
        *   使用 `scikit-learn` 进行数据预处理和特征工程的常用方法。
    *   实践：
        *   使用 `pandas` 和 `numpy` 进行实际的数据预处理操作练习。
        *   使用 AI 工具辅助完成数据预处理代码。
    *   **小组项目一：电商用户行为数据探索与预处理 (案例介绍与数据准备)**
        *   介绍电商用户行为数据集，明确项目目标：对用户行为数据进行探索性分析和预处理，为后续的机器学习建模做准备。
        *   布置小组项目一任务：数据探索、清洗和特征工程，下周课前提交预处理后的数据集和代码。
*   **第二次课:  小组项目一：电商用户行为数据探索与预处理 (数据分析与代码实践)**
    *   内容：
        *   **学生分组进行小组项目一：电商用户行为数据探索与预处理**
        *   **教师巡回指导，解答学生在数据分析和代码实现中遇到的问题。**
    *   实践：
        *   学生以小组为单位，使用 Python 和 AI 工具，进行电商用户行为数据探索、数据清洗和特征工程。
        *   完成小组项目一代码初稿。
:::

### 第二阶段 (3-8周): 机器学习核心算法实践

#### 第3周 (共2次课)

::: {#week3-1}
*   **第一次课: 分类算法 (一) - 逻辑回归与支持向量机 (SVM)**
    *   内容：
        *   分类问题概述：应用场景 (客户分类、风险预测、垃圾邮件识别等)。
        *   逻辑回归：原理、公式推导 (简要介绍)、`scikit-learn` 实现、模型评估指标 (准确率、精确率、召回率、F1-score、AUC-ROC)。
        *   支持向量机 (SVM)：原理 (最大间隔、核函数 - 线性核、RBF核)、`scikit-learn` 实现、SVM 的优缺点。
        *   模型选择与调优：交叉验证、网格搜索 (`GridSearchCV`) (简要介绍)。
    *   实践：
        *   使用 `scikit-learn` 构建和评估逻辑回归和 SVM 分类模型，应用于电商用户行为数据集 (小组项目一)。
        *   使用 AI 工具辅助完成模型训练和评估代码。
    *   **小组项目一：电商用户行为数据分类模型构建 (逻辑回归或SVM)**
        *   指导学生使用逻辑回归或 SVM 算法，基于预处理后的电商用户行为数据，构建用户分类模型 (例如：用户购买意愿预测、用户价值分层)。
        *   明确小组项目一提交内容：模型代码、实验结果报告 (包括模型评估指标)。
*   **第二次课:  小组项目一：电商用户行为数据分类模型构建 (模型训练与代码实践)**
    *   内容：
        *   **学生分组进行小组项目一：电商用户行为数据分类模型构建 (逻辑回归或SVM)**
        *   **教师巡回指导，解答学生在模型训练和代码实现中遇到的问题。**
    *   实践：
        *   学生以小组为单位，使用 Python 和 AI 工具，构建和训练逻辑回归或 SVM 分类模型。
        *   完成小组项目一代码和实验报告初稿。
:::

#### 第4周 (共2次课)

::: {#week4-1}
*   **第一次课: 分类算法 (二) - 决策树与集成学习 (随机森林)**
    *   内容：
        *   决策树：原理、信息增益/基尼系数、`scikit-learn` 实现、决策树的优缺点、可视化 (graphviz)。
        *   集成学习：Bagging (随机森林)：原理、`scikit-learn` 实现、随机森林的优缺点、特征重要性。
        *   模型评估与选择：模型评估指标回顾、交叉验证、网格搜索 (`GridSearchCV`) 详细讲解与实践。
        *   分类模型评估指标的选择和应用场景。
    *   实践：
        *   使用 `scikit-learn` 构建和评估决策树和随机森林分类模型，并进行模型调优。
        *   比较不同分类模型在电商用户行为数据集上的性能。
        *   使用 AI 工具辅助完成模型训练、评估和调优代码。
    *   **小组项目一：电商用户行为数据分类模型优化 (随机森林)**
        *   指导学生使用随机森林算法，优化电商用户行为数据分类模型，并进行模型性能评估和比较。
        *   **小组项目一：电商用户行为数据探索与预处理 提交 (第5周课前)**
*   **第二次课:  小组项目一：电商用户行为数据分类优化 (模型优化与报告撰写)**
    *   内容：
        *   **学生分组进行小组项目一：电商用户行为数据分类优化 (随机森林)**
        *   **教师巡回指导，解答学生在模型优化和代码实现中遇到的问题。**
    *   实践：
        *   学生以小组为单位，使用 Python 和 AI 工具，优化随机森林分类模型。
        *   撰写小组项目一实验报告，包括数据预处理、模型构建、模型评估、结果分析和结论。
:::

#### 第5周 (共2次课)

::: {#week5-1}
*   **第一次课: 回归算法 (一) - 线性回归与多项式回归**
    *   内容：
        *   回归问题概述：应用场景 (房价预测、销量预测、股票价格预测等)。
        *   线性回归：原理、公式推导 (简要介绍)、`scikit-learn` 实现、模型评估指标 (均方误差 MSE、均方根误差 RMSE、平均绝对误差 MAE、R-squared)。
        *   多项式回归：原理、`scikit-learn` 实现、多项式回归与线性回归的关系。
        *   正则化：L1 正则化 (LASSO)、L2 正则化 (Ridge) (简要介绍)。
    *   实践：
        *   使用 `scikit-learn` 构建和评估线性回归和多项式回归模型，应用于房价预测数据集 (小组项目二)。
        *   使用 AI 工具辅助完成模型训练和评估代码。
    *   **小组项目二：房价预测模型构建 (线性回归或多项式回归)**
        *   指导学生使用线性回归或多项式回归算法，基于房价数据集，构建房价预测模型。
        *   明确小组项目二提交内容：模型代码、实验结果报告 (包括模型评估指标)。
*   **第二次课:  小组项目二：房价预测模型构建 (模型训练与代码实践)**
    *   内容：
        *   **学生分组进行小组项目二：房价预测模型构建 (线性回归或多项式回归)**
        *   **教师巡回指导，解答学生在模型训练和代码实现中遇到的问题。**
    *   实践：
        *   学生以小组为单位，使用 Python 和 AI 工具，构建和训练线性回归或多项式回归模型。
        *   完成小组项目二代码和实验报告初稿。
:::

#### 第6周 (共2次课)

::: {#week6-1}
*   **第一次课: 回归算法 (二) - 集成学习 (XGBoost)**
    *   内容：
        *   集成学习：Boosting (XGBoost)：原理 (梯度提升、树模型)、`xgboost` 库实现、XGBoost 的优缺点、模型参数调优。
        *   回归模型评估指标的选择和应用场景。
    *   实践：
        *   使用 `xgboost` 库构建和评估 XGBoost 回归模型，并进行模型调优。
        *   比较 XGBoost 与线性回归、多项式回归在房价预测数据集上的性能。
        *   使用 AI 工具辅助完成模型训练、评估和调优代码。
    *   **小组项目二：房价预测模型优化 (XGBoost)**
        *   指导学生使用 XGBoost 算法，优化房价预测模型，并进行模型性能评估和比较。
        *   **小组项目二：房价预测模型构建 (线性/多项式回归) 提交 (第7周课前)**
*   **第二次课:  小组项目二：房价预测模型优化 (模型优化与报告撰写)**
    *   内容：
        *   **学生分组进行小组项目二：房价预测模型优化 (XGBoost)**
        *   **教师巡回指导，解答学生在模型优化和代码实现中遇到的问题。**
    *   实践：
        *   学生以小组为单位，使用 Python 和 AI 工具，优化 XGBoost 回归模型。
        *   撰写小组项目二实验报告，包括模型构建、模型评估、模型调优、结果分析和结论。
:::

#### 第7周 (共2次课)

::: {#week7-1}
*   **第一次课: 聚类算法 (一) - K-Means**
    *   内容：
        *   聚类问题概述：应用场景 (用户分群、商品推荐、异常检测等)。
        *   K-Means 聚类：原理、算法步骤、`scikit-learn` 实现、K 值选择 (轮廓系数、肘部法则)、K-Means 的优缺点。
        *   聚类模型评估指标：轮廓系数、 Davies-Bouldin 指数 (简要介绍)。
        *   聚类结果可视化：散点图、聚类中心可视化。
    *   实践：
        *   使用 `scikit-learn` 构建和评估 K-Means 聚类模型，应用于用户分群数据集 (小组项目三)。
        *   使用 AI 工具辅助完成模型训练、评估和可视化代码。
    *   **小组项目三：用户分群模型构建 (K-Means)**
        *   指导学生使用 K-Means 聚类算法，基于用户分群数据集，构建用户分群模型。
        *   明确小组项目三提交内容：模型代码、实验结果报告 (包括聚类结果可视化和分析)。
*   **第二次课:  小组项目三：用户分群模型构建 (模型训练与代码实践)**
    *   内容：
        *   **学生分组进行小组项目三：用户分群模型构建 (K-Means)**
        *   **教师巡回指导，解答学生在模型训练和代码实现中遇到的问题。**
    *   实践：
        *   学生以小组为单位，使用 Python 和 AI 工具，构建和训练 K-Means 聚类模型。
        *   完成小组项目三代码和实验报告初稿。
:::

#### 第8周 (共2次课)

::: {#week8-1}
*   **第一次课: 聚类算法 (二) - DBSCAN**
    *   内容：
        *   DBSCAN 聚类：原理 (密度聚类)、算法步骤、`scikit-learn` 实现、DBSCAN 的优缺点、参数选择。
        *   聚类算法选择：K-Means vs. DBSCAN，不同聚类算法的应用场景。
        *   聚类结果评估：轮廓系数、 Davies-Bouldin 指数 详细讲解与实践，聚类结果的业务意义解读。
        *   聚类结果可视化：高级可视化技巧，例如使用 `seaborn` 或 `plotly` 绘制更美观、更具信息量的聚类结果图。
    *   实践：
        *   使用 `scikit-learn` 构建和评估 DBSCAN 聚类模型，并进行模型调优和参数选择。
        *   比较 K-Means 和 DBSCAN 在用户分群数据集上的性能和聚类效果。
        *   使用 AI 工具辅助完成模型训练、评估、可视化和调优代码。
    *   **小组项目三：用户分群模型优化 (DBSCAN 或 K-Means 优化)**
        *   指导学生使用 DBSCAN 算法或优化 K-Means 算法 (例如：尝试不同的 K 值或初始化方法)，优化用户分群模型，并进行模型性能评估和聚类结果分析。
        *   **小组项目三：用户分群模型构建 (K-Means) 提交 (第9周课前)**
*   **第二次课:  小组项目三：用户分群模型优化 (模型优化与报告撰写)**
    *   内容：
        *   **学生分组进行小组项目三：用户分群模型优化 (DBSCAN 或 K-Means 优化)**
        *   **教师巡回指导，解答学生在模型优化和代码实现中遇到的问题。**
    *   实践：
        *   学生以小组为单位，使用 Python 和 AI 工具，优化 DBSCAN 或 K-Means 聚类模型。
        *   撰写小组项目三实验报告，包括模型构建、模型评估、聚类结果可视化、结果分析和结论。

:::

### 第三阶段 (9-13周): 生成式AI探索与应用

#### 第9周 (共2次课)

::: {#week9-1}
*   **第一次课: 生成式AI 导论 - 大语言模型 (LLM) 与 Prompt 工程**
    *   内容：
        *   生成式AI 概述：发展历程、应用场景 (内容创作、对话系统、代码生成等)、与判别式 AI 的区别。
        *   大语言模型 (LLM)：Transformer 架构 (简要介绍)、预训练、微调、代表性 LLM (GPT, BERT, Llama 等)。
        *   Prompt 工程：Prompt 的概念、Prompt 设计原则 (清晰、具体、简洁)、常用 Prompt 技巧 (Few-shot, Chain-of-Thought, Instruction Tuning)。
        *   Langchain 框架：Langchain 简介、核心组件 (Models, Prompts, Chains, Agents)、Langchain 的应用场景。
    *   实践：
        *   体验在线 LLM 产品 (例如：ChatGPT, 文心一言, Bard)，尝试不同的 Prompt，体验 LLM 的文本生成能力。
        *   使用 AI 工具辅助进行 Prompt 设计和优化。
    *   **小组项目四：智能文案生成 Agent 开发 (项目启动与 Prompt 设计)**
        *   介绍小组项目四：智能文案生成 Agent 开发，明确项目目标：利用 LLM 和 Langchain 框架，开发一个能够根据用户需求自动生成高质量文案的 Agent。
        *   布置小组项目四任务：Prompt 设计、Agent 框架搭建、核心功能开发和扩展功能探索。
        *   **小组项目三：用户分群模型优化 (DBSCAN/K-Means) 及报告 提交 (第10周课前)**
*   **第二次课:  小组项目四：智能文案生成 Agent  Prompt 优化与 Langchain 框架初探**
    *   内容：
        *   **学生分组进行小组项目四：智能文案生成 Agent  Prompt 优化**
        *   **教师巡回指导，解答学生在 Prompt 设计和优化中遇到的问题。**
        *   Langchain 框架初探：安装 Langchain,  Langchain 核心组件 (Models, Prompts) 实践，构建简单的 LLM 应用。
    *   实践：
        *   学生以小组为单位，使用 Python 和 AI 工具，进行智能文案生成 Agent 的 Prompt 设计和优化。
        *   完成小组项目四 Prompt 设计方案初稿。
        *   初步体验 Langchain 框架，完成简单的 LLM 应用代码。
:::

#### 第10周 (共2次课)

::: {#week10-1}
*   **第一次课:  Langchain 核心组件与 Agent 框架搭建**
    *   内容：
        *   Langchain 核心组件：Chains (SequentialChain, SimpleSequentialChain, TransformChain), Memory (ConversationBufferMemory, ConversationChain)。
        *   Agent 框架搭建：Agent 的概念、Agent 类型 (Zero-shot Agent, Conversational Agent)、`Langchain` Agent 实现、Agent 工具 (Tools) 的使用。
        *   智能文案生成 Agent 框架设计：确定 Agent 类型、选择 Tools,  设计 Agent 的工作流程。
    *   实践：
        *   使用 Langchain 框架，构建智能文案生成 Agent 的基本框架，包括 Agent, Tools 和 Memory 组件。
        *   使用 AI 工具辅助完成 Agent 框架代码。
    *   **小组项目四：智能文案生成 Agent  Agent 框架搭建**
        *   指导学生使用 Langchain 框架，搭建智能文案生成 Agent 的基本框架，为后续功能开发奠定基础。
        *   **小组项目四：智能文案生成 Agent  Prompt 设计方案 提交 (第11周课前)**
*   **第二次课:  小组项目四：智能文案生成 Agent  Agent 框架代码实践**
    *   内容：
        *   **学生分组进行小组项目四：智能文案生成 Agent  Agent 框架代码实现**
        *   **教师巡回指导，解答学生在 Agent 框架搭建和代码实现中遇到的问题。**
    *   实践：
        *   学生以小组为单位，使用 Python 和 AI 工具，完成智能文案生成 Agent 的框架代码。
        *   完成小组项目四 Agent 框架代码初稿。
:::

#### 第11周 (共2次课)

::: {#week11-1}
*   **第一次课:  智能文案生成 Agent 核心功能开发 (文案生成)**
    *   内容：
        *   智能文案生成 Agent 核心功能开发：
            *   **文案生成流程设计：**  用户需求分析、Prompt 构建、LLM 调用、文案生成结果处理。
            *   **Langchain Chains 应用：**  使用 Chains 组合 Prompt 和 LLM,  实现文案生成流程。
            *   **文案生成质量评估：**  常用评估指标 (流畅度、相关性、信息量)、人工评估方法。
        *   LLM 调用与 API Key 管理：如何调用 LLM API (例如：OpenAI API)、API Key 的申请和安全管理。
    *   实践：
        *   使用 Langchain Chains 和 LLM API，实现智能文案生成 Agent 的核心功能：根据用户输入的关键词或主题，自动生成文案。
        *   使用 AI 工具辅助完成文案生成功能代码。
    *   **小组项目四：智能文案生成 Agent  核心功能 (文案生成) 开发**
        *   指导学生实现智能文案生成 Agent 的核心功能，使其能够根据用户需求生成基本的文案内容。
        *   **小组项目四：智能文案生成 Agent  Agent 框架代码 提交 (第12周课前)**
*   **第二次课:  小组项目四：智能文案生成 Agent  核心功能代码实践**
    *   内容：
        *   **学生分组进行小组项目四：智能文案生成 Agent  核心功能 (文案生成) 代码实现**
        *   **教师巡回指导，解答学生在文案生成功能开发和代码实现中遇到的问题。**
    *   实践：
        *   学生以小组为单位，使用 Python 和 AI 工具，完成智能文案生成 Agent 的核心功能代码。
        *   完成小组项目四 Agent 核心功能代码初稿。
:::

#### 第12周 (共2次课)

::: {#week12-1}
*   **第一次课:  智能文案生成 Agent 功能扩展 (一) -  文案风格控制与优化**
    *   内容：
        *   智能文案生成 Agent 功能扩展：
            *   **文案风格控制：**  Prompt 技巧 (风格关键词、指令)、参数调整 (temperature, top_p)、实现文案风格多样化 (例如：正式、幽默、创意)。
            *   **文案优化：**  Prompt 优化技巧、迭代优化流程、提升文案质量 (例如：信息准确性、逻辑性、吸引力)。
            *   **Langchain Memory 应用：**  在 Agent 中引入 Memory 组件，实现对话记忆功能，提升文案生成的连贯性和上下文相关性。
        *   LLM 参数调优：temperature, top_p 等常用参数的含义和作用，参数调优策略。
    *   实践：
        *   扩展智能文案生成 Agent 的功能，实现文案风格控制和优化。
        *   尝试不同的 Prompt 技巧和参数调整，提升文案生成质量和多样性。
        *   使用 AI 工具辅助完成功能扩展代码。
    *   **小组项目四：智能文案生成 Agent  功能扩展 (文案风格控制与优化)**
        *   指导学生扩展智能文案生成 Agent 的功能，使其能够控制文案风格和进行文案优化，提升 Agent 的实用性和用户体验。
        *   **小组项目四：智能文案生成 Agent  核心功能代码 提交 (第13周课前)**
*   **第二次课:  小组项目四：智能文案生成 Agent  功能扩展代码实践**
    *   内容：
        *   **学生分组进行小组项目四：智能文案生成 Agent  功能扩展 (文案风格控制与优化) 代码实现**
        *   **教师巡回指导，解答学生在功能扩展代码实现中遇到的问题。**
    *   实践：
        *   学生以小组为单位，使用 Python 和 AI 工具，完成智能文案生成 Agent 的功能扩展代码。
        *   完成小组项目四 Agent 功能扩展代码初稿。
:::

#### 第13周 (共2次课)

::: {#week13-1}
*   **第一次课:  智能文案生成 Agent 功能扩展 (二) -  文生图 (可选) 与多模态 AI 初探**
    *   内容：
        *   智能文案生成 Agent 功能扩展 (可选)：
            *   **文生图功能集成：**  Stable Diffusion WebUI 介绍、API 调用、Langchain 工具集成、实现文生图功能。
            *   **多模态 AI 初探：**  多模态 AI 概念、应用场景 (图文生成、跨模态检索)、多模态 LLM 简介 (例如：LLaVA,  VisualGPT)。
            *   **Agent 功能扩展思路：**  更多 Agent 功能扩展方向 (例如：文案编辑、多语言支持、内容发布)。
        *   Stable Diffusion WebUI 实践：安装和配置 Stable Diffusion WebUI,  体验文生图功能，了解常用模型和参数。
    *   实践：
        *   为智能文案生成 Agent 添加文生图功能 (可选)，实现图文结合的内容创作。
        *   体验 Stable Diffusion WebUI 的文生图功能，尝试不同的模型和 Prompt。
        *   使用 AI 工具辅助完成文生图功能集成代码。
    *   **小组项目四：智能文案生成 Agent  功能扩展 (文生图 - 可选) 与 Agent 报告撰写**
        *   鼓励学生为智能文案生成 Agent 添加文生图功能，探索多模态 AI 应用，并开始撰写小组项目四实验报告。
        *   **小组项目四：智能文案生成 Agent  功能扩展代码 提交 (第14周课前)**
*   **第二次课:  小组项目四：智能文案生成 Agent  功能扩展代码实践与报告撰写指导**
    *   内容：
        *   **学生分组进行小组项目四：智能文案生成 Agent  文生图功能探索 (可选) 代码实现**
        *   **教师巡回指导，解答学生在文生图功能集成和代码实现中遇到的问题。**
        *   **小组项目四报告撰写指导：**  报告结构、内容要点、撰写技巧。
    *   实践：
        *   学生以小组为单位，使用 Python 和 AI 工具，完成智能文案生成 Agent 的文生图功能集成代码 (可选)。
        *   开始撰写小组项目四实验报告。
:::

### 第四阶段 (14-16周): 小组综合项目实战与商业应用拓展

#### 第14-15周 (共4次课): 小组综合项目开发与指导

::: {#week14-15}
*   内容：
    *   学生以小组为单位，进行小组综合项目的设计、开发和实验。
*   指导：
    *   教师在课堂上提供项目指导和技术支持，解答学生在项目开发过程中遇到的问题。
*   协作：
    *   鼓励学生充分利用 AI 辅助编程工具，提高开发效率，加强团队协作。
*   检查：
    *   第 15 周进行小组综合项目中期检查，了解项目进展，及时发现和解决问题。
:::

#### 第16周 (共1次课): 小组综合项目展示与课程总结

::: {#week16-1}
*   **第一次课: 小组综合项目展示与答辩**
    *   展示：
        *   各小组进行项目成果展示，讲解项目背景、问题定义、技术方案、实验结果、商业价值和创新点。
    *   答辩：
        *   接受教师和同学的提问和点评。
    *   **小组综合项目：开放式商业问题 提交 (本周课前)**
*   **第二次课: 课程总结与未来展望**
    *   总结：
        *   回顾课程内容，总结机器学习和生成式AI的核心概念、算法、技术和应用。
    *   展望：
        *   展望机器学习和生成式AI 在商业领域的未来发展前景，鼓励学生继续深入学习和探索。
        *   再次强调生成式AI 技术的商业伦理和社会责任。
    *   评估：
        *   进行课程评估和反馈，收集学生对课程的意见和建议，为课程改进提供参考。
:::

## 项目设置 (贯穿课程)

### 小组项目 (共4个 + 综合项目)

*   **小组项目一 (电商用户行为数据分析与分类)**
    *   学习目标：掌握数据预处理、特征工程、分类算法 (逻辑回归, SVM, 决策树, 随机森林) 的应用，理解分类模型评估指标。
    *   周期：2 周 (数据预处理 + 模型构建与优化)
    *   提交时间：
        *   数据预处理结果：第 2 周课前
        *   分类模型 (逻辑回归/SVM)：第 3 周课前
        *   分类模型 (随机森林) 及报告：第 5 周课前
    *   **数据集:**  学生小组自主选择数据集，建议选择电商或零售行业的用户行为数据集。数据集应包含用户行为数据，数据量适中，特征维度不低于10个，且具有一定的分类难度。 鼓励各小组选择不同的数据集，以提高项目实践的多样性。
*   **小组项目二 (房价预测模型构建与优化)**
    *   学习目标：掌握回归算法 (线性回归, 多项式回归, XGBoost) 的应用，理解正则化和模型调优方法，掌握回归模型评估指标。
    *   周期：2 周 (模型构建 + 模型优化与调优)
    *   提交时间：
        *   回归模型 (线性回归/多项式回归)：第 5 周课前
        *   回归模型 (XGBoost) 及报告：第 7 周课前
    *   **数据集:** 学生小组自主选择数据集，建议选择包含城市或地区房价信息的公开数据集。数据集应包含房价相关特征，数据量不低于500条，特征维度不低于8个，且特征之间应具有一定的相关性。 鼓励各小组选择不同的数据集，以提高项目实践的多样性。
*   **小组项目三 (用户分群模型构建与分析)**
    *   学习目标：掌握聚类算法 (K-Means, DBSCAN) 的应用，理解聚类算法选择和聚类结果评估方法，掌握聚类结果可视化和分析技巧。
    *   周期：2 周 (模型构建 + 模型优化与结果分析)
    *   提交时间：
        *   聚类模型 (K-Means)：第 7 周课前
        *   聚类模型 (DBSCAN 或 K-Means 优化) 及报告：第 9 周课前
    *   **数据集:** 学生小组自主选择数据集，建议选择包含用户画像或用户行为特征的数据集。数据集应适用于用户分群任务，数据量不低于300条，特征维度不低于5个，且数据集中应包含可用于区分用户群体的特征。 鼓励各小组选择不同的数据集，以提高项目实践的多样性。
*   **小组项目四 (智能文案生成 Agent 开发)**
    *   学习目标：掌握 Prompt 工程、`Langchain` 框架和 Agent 开发技术，理解 LLM 的应用和局限性，初步接触多模态 AI (可选)。
    *   周期：4 周 (Prompt 设计 + Agent 框架 + 功能完善 + 扩展探索)
    *   提交时间：
        *   Prompt 设计方案和 Agent 代码框架：第 10 周课前
        *   Agent 核心功能 (文案生成)：第 12 周课前
        *   Agent 功能扩展 (可选) 及报告：第 14 周课前
    *   **数据集:**  本项目不涉及传统数据集，学生需自行准备或生成 Agent 应用所需的示例数据或知识库 (例如：产品信息、营销知识等)。鼓励各小组根据 Agent 应用场景，构建不同的知识库或示例数据，以体现 Agent 的个性化和创新性。
*   **小组综合项目 (开放式商业问题)**
    *   学习目标：综合应用课程所学机器学习和生成式AI知识，解决开放式商业问题，提升创新思维、团队协作和项目管理能力。
    *   周期：3 周 (项目选题与方案设计 + 项目开发与实验 + 项目展示与报告)
    *   提交时间：
        *   小组综合项目报告和展示材料：第 16 周课前
    *   **数据集:**  学生小组根据所选的开放式商业问题自主选择或构建数据集，数据集应与项目主题紧密相关，数据量和难度应与项目目标相匹配。 鼓励各小组选择不同的数据集，以提高项目实践的多样性。

    *小组人数：建议每组 2-3 人。*

*   **项目形式:** 小组合作完成，包括项目方案设计、数据准备 (或环境搭建)、算法/模型实现、实验验证、结果分析、项目展示和项目报告。 每次小组项目提交后，选取 3 个优秀小组在课堂上进行项目讲解和展示，分享经验和成果。

## AI 辅助编程工具

*   **代码编辑器:** VS Code, Cursor
    *   特点：轻量级、高效、插件丰富，支持 Jupyter Notebook，适合 Python 开发和机器学习。
*   **代码辅助插件:** GitHub Copilot, 通义灵码, Cline 等
    *   功能：代码自动补全、代码片段生成、代码错误检查、自然语言代码解释等，提高编程效率，降低编程难度，辅助 Prompt 设计和 Agent 开发。
*   **机器学习/深度学习库:** `scikit-learn`, `TensorFlow`, `PyTorch`
    *   功能：提供丰富的机器学习和深度学习算法、模型和工具，方便学生进行模型构建、训练和评估。
*   **生成式AI 框架:** `Langchain`
    *   功能：简化 LLM 应用和 Agent 开发流程，提供丰富的组件和工具，方便学生快速构建生成式AI应用。
*   **文生图工具:** Stable Diffusion WebUI
    *   功能：强大的文生图工具，支持多种模型和参数调整，方便学生进行图像生成和创意设计。

## 考核方式

*   **小组项目一 ~ 四 (40%):**  根据项目完成质量、代码质量、实验结果、创新性和项目报告进行综合评分，每个项目 10%。
*   **小组综合项目 (20%):**  根据项目选题意义、创新性、实用性、完成度、展示效果和项目报告进行评分 (小组内成员评分可以考虑组内互评和贡献度)。
*   **课堂参与 (10%):**  根据课堂讨论、提问、出勤、作业完成情况等进行评分，鼓励学生积极参与课堂互动。
*   **期末考试 (30%):**  期末考试采用闭卷形式，重点考察学生对机器学习和生成式AI 基础理论、核心概念和算法的掌握程度。

